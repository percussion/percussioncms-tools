/*[ IOSPipe.java ]*************************************************************
 *
 * COPYRIGHT (c) 1999 - 2003 by Percussion Software, Inc., Stoneham, MA USA.
 * All rights reserved. This material contains unpublished, copyrighted
 * work including confidential and proprietary information of Percussion.
 *
 ******************************************************************************/

package com.percussion.E2Designer;

import com.percussion.design.objectstore.PSBackEndDataTank;
import com.percussion.design.objectstore.PSDataMapper;
import com.percussion.design.objectstore.PSDataSelector;

/**
 * This interface is used to provide a generalized way of accessing the
 * implementation classes, such as OSQueryPipe and OSUpdatePipe. IOSPipe will
 * also pass down the IGuiLink and IPersist interface methods for implementation
 * as well.
 */

public interface IOSPipe extends IGuiLink, IPersist
{
  /**
   * Gives IOSPipe access to PSPipe method getDataMapper(). The mapper
   * associated with this pipe will be returned.
   * @returns PSDataMapper The mapper object returned will ALWAYS be an
   * OSDataMapper (extended from PSDataMapper) owned by this pipe.  If this pipe
   * has no mapper, a <CODE>null</CODE> will be returned.
   */
  public PSDataMapper getDataMapper();

  /**
   * Gives IOSPipe access to PSPipe method setDataMapper(). Any GUI related
   * functionality to setting the mapper with go here. Its basic functionality
   * is simply passing the mapper object to PSPipe.
   * @param mapper The mapper object that will replace the current mapper in
   * this pipe. If value is <CODE>null</CODE>, the mapper will be removed from
   * this pipe. This should be an OSDataMapper object.
   */
  public void setDataMapper( PSDataMapper mapper );

  /**
   * Gives IOSPipe access to PSPipe method getBackEndDataTank().
   * @returns PSBackEndDataTank The data returned will ALWAYS be an
   * OSBackendDatatank object (extended from PSBackEndDataTank) owned by any
   * kind of pipe.
   */
  public PSBackEndDataTank getBackEndDataTank();

  /**
   * Gives IOSPipe access to PSPipe method getBackEndDataTank().
   * @param PSBackEndDataTank The BackEndDataTank object that will replace the
   * current BackEndDataTank object owned by the pipe. If value is
   * <CODE>null</CODE>, the BackendDataTank will be removed from this pipe. This
   * should be an OSBackendDatatank object.
   */
  public void setBackEndDataTank( PSBackEndDataTank dt );

  /**
   * Gives IOSPipe access to PSQueryPipe method getDataSelector(). The selector
   * associated with this pipe will be returned.
   * @returns PSDataSelector The selector object returned will ALWAYS be an
   * OSDataSelector (extended from PSDataSelector) owned by this pipe. If this
   * pipe has no selector, a <CODE>null</CODE> will be returned.
   */
  public PSDataSelector getDataSelector();

  /**
   * Gives IOSPipe access to PSPipe method setDataSelector(). Any GUI related
   * functionality to setting the selector with go here. Its basic functionality
   * is simply passing the selectir object to PSPipe.
   * @param ds The selector object that will replace the current selector in
   * this pipe. If value is <CODE>null</CODE>, the selector will be removed from
   * this pipe. This should be an OSDataSelector object.
   */
  public void setDataSelector( PSDataSelector ds );

  /**
   * @returns A String that is basically a comment about this pipe. This is not
   * a required attribute. <CODE>null</CODE> is returned if there is no
   * description.
   */
  public String getDatasetDescription();

  /**
   * @param This String will replace the comment about this pipe. This is not
   * a required attribute. A <CODE>null</CODE> value is acceptable, it is
   * treated as an empty string.
   */
  public void setDatasetDescription(String desc);

  /**
   * @returns A String that represents the dataset name (server generated by
   * default) for the dataset that owns this pipe. This is a required attribute
   * for a pipe, cannot be null or empty.
   */
  public String getDatasetName();

  /**
   * @param A String that is replacing the dataset name for the dataset that
   * owns this pipe.  This is a required attribute for a pipe, cannot be null or
   * empty. It must also be unique among all the datasets in the app.
   */
  public void setDatasetName(String name);

  /**
    * @returns a string that represents the pipe type.
    */
  public String getType();

  /**
   * @param OSDataset The parent owner dataset of this pipe.
   */
  public OSDataset getDataset();
}
