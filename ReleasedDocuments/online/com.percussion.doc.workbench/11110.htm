<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<title> SQL Functions Available in Rhythmyx </title>
<meta name="Generator" content="AITPublish">
<meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">
<meta name="Keywords" content="">
<script type="text/javascript" src="dhtml_toc.js"></script>
<script type="text/javascript" src="open_parent.js"></script>
<link rel="stylesheet" href="stylesheet.css">
<!-- <link rel="stylesheet" href="44.css"> -->
<base target="BODY">
</head>

<body onload="loadParent()" text="#000000" link="#0000A0" alink="#008000" vlink="#FF0000">
<table border="0" width="100%">
  <tr valign="top"><td height="100%" > 
    <table cellpadding="0" cellspacing="0" border="0">
<tr valign="top">
<td width= "18">
<p class="bodytext"><a href="13297.htm" target="_self"><img src="125.gif" alt="Previous Topic" height="17" width="18" vspace="0" hspace="0" align="bottom" border="0"></a></p></td>
<td width= "18">
<p class="bodytext"><a href="13298.htm" target="_self"><img src="124.gif" alt="Next Topic" height="17" width="18" vspace="0" hspace="0" align="bottom" border="0"></a></p></td>
</tr>
</table>
<h4 class="heading4">SQL Functions Available in Rhythmyx</h4>
<p class="bodytext">The following SQL functions are available in Rhythmyx:</p>
<table width="1296" cellpadding="2" cellspacing="0" border="0" style="border-collapse:collapse">
<tr align="left" valign="top">
<td width="216"><p class="tableheading"><strong class="specialbold">Function</strong></p>
</td>
<td width="360"><p class="tableheading"><strong class="specialbold">Description</strong></p>
</td>
<td width="360"><p class="tableheading"><strong class="specialbold">RDBMS Equivalents</strong></p>
</td>
<td width="360"><p class="tableheading"><strong class="specialbold">Parameters</strong></p>
</td>
</tr>
<tr align="left" valign="top">
<td width="216"><p class="tablebodytext">CURRENT_DATE</p>
</td>
<td width="360"><p class="tablebodytext">Returns the current date and time.  May differ from the CURRENT_TIMESTAMP function in certain DBMS.  Check your DBMS documentation for the specific results of this function in your DBMS.</p>
</td>
<td width="360"><p class="tablebodytext">Oracle:  SYSDATE</p>
<p class="tablebodytext">DB2:  CURRENT DATE</p>
<p class="tablebodytext">Others:  GETDATE</p>
</td>
<td width="360"><p class="tablebodytext">None</p>
</td>
</tr>
<tr align="left" valign="top">
<td width="216"><p class="tablebodytext">CURRENT_TIMESTAMP</p>
</td>
<td width="360"><p class="tablebodytext">Returns the current date and time.  May differ from the CURRENT_DATE function in certain DBMS.  Check your DBMS documentation for the specific results of this function in your DBMS.</p>
</td>
<td width="360"><p class="tablebodytext">Oracle:  SYSDATE</p>
<p class="tablebodytext">DB2:  CURRENT TIMESTAMP</p>
<p class="tablebodytext">Others:  GETDATE</p>
</td>
<td width="360"><p class="tablebodytext">None</p>
</td>
</tr>
<tr align="left" valign="top">
<td width="216"><p class="tablebodytext">DAY</p>
</td>
<td width="360"><p class="tablebodytext">Returns an integer representing the day datepart of the specified date.</p>
</td>
<td width="360"><p class="tablebodytext">All:  DAY</p>
</td>
<td width="360"><p class="tablebodytext">None</p>
</td>
</tr>
<tr align="left" valign="top">
<td width="216"><p class="tablebodytext">IN-NUMBER</p>
</td>
<td width="360"><p class="tablebodytext">Returns the string corresponding to the IN clause. On Oracle, use this function only if the inlist is guaranteed to contain less than 1000 numbers (Use IN-NUMBER-ARRAY function if the inlist can contain more than 1000 numbers). There is no size limitation for other databases.</p>
</td>
<td width="360"><p class="tablebodytext">All:  IN-NUMBER</p>
</td>
<td width="117"><table width="352" cellpadding="2" cellspacing="0" border="0" style="border-collapse:collapse">
<tr align="left" valign="top">
<td width="117"><p class="tableheading"><strong class="specialbold">Name</strong></p>
</td>
<td width="117"><p class="tableheading"><strong class="specialbold">Description</strong></p>
</td>
<td width="117"><p class="tableheading"><strong class="specialbold">Required?</strong></p>
</td>
</tr>
<tr align="left" valign="top">
<td width="117"><p class="tablebodytext">inclause</p>
</td>
<td width="117"><p class="tablebodytext">A single number or a collection (java.util.Collection) of numbers that make up the IN clause.</p>
</td>
<td width="117"><p class="tablebodytext">Yes</p>
</td>
</tr>
<tr align="left" valign="top">
<td width="117"><p class="tablebodytext">defaultValue</p>
</td>
<td width="117"><p class="tablebodytext">Specify this value if the value of inclause may be null or empty.  If specified, this parameter should have a value for which no rows will be returned.  The purpose of this parameter is to ensure that a valid SQL statement is created even if the value of the inclause parameter is null or empty.</p>
</td>
<td width="117"><p class="tablebodytext">No</p>
</td>
</tr>

</table>
</td>
<td width="360"><p class="tablebodytext">&nbsp;</p>
</td>
</tr>
<tr align="left" valign="top">
<td width="216"><p class="tablebodytext">IN-NUMBER-ARRAY</p>
</td>
<td width="360"><p class="tablebodytext">Returns the string corresponding to the IN clause. On Oracle, use this function if the inlist can contain more than 1000 numbers. This function is same as IN-NUMBER for other databases.</p>
</td>
<td width="360"><p class="tablebodytext">All:  IN-NUMBER-ARRAY</p>
</td>
<td width="117"><table width="352" cellpadding="2" cellspacing="0" border="0" style="border-collapse:collapse">
<tr align="left" valign="top">
<td width="117"><p class="tableheading"><strong class="specialbold">Name</strong></p>
</td>
<td width="117"><p class="tableheading"><strong class="specialbold">Description</strong></p>
</td>
<td width="117"><p class="tableheading"><strong class="specialbold">Required?</strong></p>
</td>
</tr>
<tr align="left" valign="top">
<td width="117"><p class="tablebodytext">inclause</p>
</td>
<td width="117"><p class="tablebodytext">A single number or a collection (java.util.Collection) of numbers that make up the IN clause.</p>
</td>
<td width="117"><p class="tablebodytext">Yes</p>
</td>
</tr>

</table>
</td>
<td width="360"><p class="tablebodytext">&nbsp;</p>
</td>
</tr>
<tr align="left" valign="top">
<td width="216"><p class="tablebodytext">IN-TEXT</p>
</td>
<td width="360"><p class="tablebodytext">Returns the string corresponding to the IN clause. Use this function if the inlist contains strings</p>
</td>
<td width="360"><p class="tablebodytext">All:  IN-TEXT</p>
</td>
<td width="117"><table width="352" cellpadding="2" cellspacing="0" border="0" style="border-collapse:collapse">
<tr align="left" valign="top">
<td width="117"><p class="tableheading"><strong class="specialbold">Name</strong></p>
</td>
<td width="117"><p class="tableheading"><strong class="specialbold">Description</strong></p>
</td>
<td width="117"><p class="tableheading"><strong class="specialbold">Required?</strong></p>
</td>
</tr>
<tr align="left" valign="top">
<td width="117"><p class="tablebodytext">inclause</p>
</td>
<td width="117"><p class="tablebodytext">A single sting or a collection (java.util.Collection) of strings that make up the IN clause.</p>
</td>
<td width="117"><p class="tablebodytext">Yes</p>
</td>
</tr>
<tr align="left" valign="top">
<td width="117"><p class="tablebodytext">defaultValue</p>
</td>
<td width="117"><p class="tablebodytext">Specify this value if the value of inclause may be null or empty.  If specified, this parameter should have a value for which no rows will be returned.  The purpose of this parameter is to ensure that a valid SQL statement is created even if the value of the inclause parameter is null or empty.</p>
</td>
<td width="117"><p class="tablebodytext">No</p>
</td>
</tr>

</table>
</td>
<td width="360"><p class="tablebodytext">&nbsp;</p>
</td>
</tr>
<tr align="left" valign="top">
<td width="216"><p class="tablebodytext">LEFT</p>
</td>
<td width="360"><p class="tablebodytext">Returns a substring of the source string containing the specified number of characters from the left.</p>
</td>
<td width="360"><p class="tablebodytext">All:  LEFT</p>
</td>
<td width="117"><table width="352" cellpadding="2" cellspacing="0" border="0" style="border-collapse:collapse">
<tr align="left" valign="top">
<td width="117"><p class="tableheading"><strong class="specialbold">Name</strong></p>
</td>
<td width="117"><p class="tableheading"><strong class="specialbold">Description</strong></p>
</td>
<td width="117"><p class="tableheading"><strong class="specialbold">Required?</strong></p>
</td>
</tr>
<tr align="left" valign="top">
<td width="117"><p class="tablebodytext">source</p>
</td>
<td width="117"><p class="tablebodytext">Either the name of a backend column that stores text data or a replacement value that evaluates to a string.</p>
</td>
<td width="117"><p class="tablebodytext">Yes</p>
</td>
</tr>
<tr align="left" valign="top">
<td width="117"><p class="tablebodytext">length</p>
</td>
<td width="117"><p class="tablebodytext">Positive integer specifying the number of characters of the source string to include in the return string.</p>
</td>
<td width="117"><p class="tablebodytext">Yes</p>
</td>
</tr>

</table>
</td>
<td width="360"><p class="tablebodytext">&nbsp;</p>
</td>
</tr>
<tr align="left" valign="top">
<td width="216"><p class="tablebodytext">LOWER</p>
</td>
<td width="360"><p class="tablebodytext">Returns a string containing all the characters of the source string converted to lowercase.</p>
</td>
<td width="360"><p class="tablebodytext">All:  LOWER</p>
</td>
<td width="117"><table width="352" cellpadding="2" cellspacing="0" border="0" style="border-collapse:collapse">
<tr align="left" valign="top">
<td width="117"><p class="tableheading"><strong class="specialbold">Name</strong></p>
</td>
<td width="117"><p class="tableheading"><strong class="specialbold">Description</strong></p>
</td>
<td width="117"><p class="tableheading"><strong class="specialbold">Required?</strong></p>
</td>
</tr>
<tr align="left" valign="top">
<td width="117"><p class="tablebodytext">source</p>
</td>
<td width="117"><p class="tablebodytext">Either the name of a backend column that stores text data or a replacement value that evaluates to a string.</p>
</td>
<td width="117"><p class="tablebodytext">Yes</p>
</td>
</tr>

</table>
</td>
<td width="360"><p class="tablebodytext">&nbsp;</p>
</td>
</tr>
<tr align="left" valign="top">
<td width="216"><p class="tablebodytext">LTRIM</p>
</td>
<td width="360"><p class="tablebodytext">Returns the source string after removing leading blanks.</p>
</td>
<td width="360"><p class="tablebodytext">All:  LTRIM</p>
</td>
<td width="117"><table width="352" cellpadding="2" cellspacing="0" border="0" style="border-collapse:collapse">
<tr align="left" valign="top">
<td width="117"><p class="tableheading"><strong class="specialbold">Name</strong></p>
</td>
<td width="117"><p class="tableheading"><strong class="specialbold">Description</strong></p>
</td>
<td width="117"><p class="tableheading"><strong class="specialbold">Required?</strong></p>
</td>
</tr>
<tr align="left" valign="top">
<td width="117"><p class="tablebodytext">source</p>
</td>
<td width="117"><p class="tablebodytext">Either the name of a backend column that stores text data or a replacement value that evaluates to a string.</p>
</td>
<td width="117"><p class="tablebodytext">Yes</p>
</td>
</tr>

</table>
</td>
<td width="360"><p class="tablebodytext">&nbsp;</p>
</td>
</tr>
<tr align="left" valign="top">
<td width="216"><p class="tablebodytext">MONTH</p>
</td>
<td width="360"><p class="tablebodytext">Returns an integer that represents the month part of a specified date.</p>
</td>
<td width="360"><p class="tablebodytext">All:  MONTH</p>
</td>
<td width="117"><table width="352" cellpadding="2" cellspacing="0" border="0" style="border-collapse:collapse">
<tr align="left" valign="top">
<td width="117"><p class="tableheading"><strong class="specialbold">Name</strong></p>
</td>
<td width="117"><p class="tableheading"><strong class="specialbold">Description</strong></p>
</td>
<td width="117"><p class="tableheading"><strong class="specialbold">Required?</strong></p>
</td>
</tr>
<tr align="left" valign="top">
<td width="117"><p class="tablebodytext">source</p>
</td>
<td width="117"><p class="tablebodytext">Replacement value that contains a string representation of a date or timestamp.</p>
</td>
<td width="117"><p class="tablebodytext">Yes</p>
</td>
</tr>

</table>
</td>
<td width="360"><p class="tablebodytext">&nbsp;</p>
</td>
</tr>
<tr align="left" valign="top">
<td width="216"><p class="tablebodytext">RIGHT</p>
</td>
<td width="360"><p class="tablebodytext">Returns a substring of the source string containing the specified number of characters from the right.</p>
</td>
<td width="360"><p class="tablebodytext">All:  RIGHT</p>
</td>
<td width="117"><table width="352" cellpadding="2" cellspacing="0" border="0" style="border-collapse:collapse">
<tr align="left" valign="top">
<td width="117"><p class="tableheading"><strong class="specialbold">Name</strong></p>
</td>
<td width="117"><p class="tableheading"><strong class="specialbold">Description</strong></p>
</td>
<td width="117"><p class="tableheading"><strong class="specialbold">Required?</strong></p>
</td>
</tr>
<tr align="left" valign="top">
<td width="117"><p class="tablebodytext">source</p>
</td>
<td width="117"><p class="tablebodytext">Either the name of a backend column that stores text data or a replacement value that evaluates to a string.</p>
</td>
<td width="117"><p class="tablebodytext">Yes</p>
</td>
</tr>
<tr align="left" valign="top">
<td width="117"><p class="tablebodytext">length</p>
</td>
<td width="117"><p class="tablebodytext">Positive integer specifying the number of characters of the source string to include in the return string.</p>
</td>
<td width="117"><p class="tablebodytext">Yes</p>
</td>
</tr>

</table>
</td>
<td width="360"><p class="tablebodytext">&nbsp;</p>
</td>
</tr>
<tr align="left" valign="top">
<td width="216"><p class="tablebodytext">RTRIM</p>
</td>
<td width="360"><p class="tablebodytext">Returns the source string after removing trailing blanks.</p>
</td>
<td width="360"><p class="tablebodytext">All:  RIGHT</p>
</td>
<td width="117"><table width="352" cellpadding="2" cellspacing="0" border="0" style="border-collapse:collapse">
<tr align="left" valign="top">
<td width="117"><p class="tableheading"><strong class="specialbold">Name</strong></p>
</td>
<td width="117"><p class="tableheading"><strong class="specialbold">Description</strong></p>
</td>
<td width="117"><p class="tableheading"><strong class="specialbold">Required?</strong></p>
</td>
</tr>
<tr align="left" valign="top">
<td width="117"><p class="tablebodytext">source</p>
</td>
<td width="117"><p class="tablebodytext">Either the name of a backend column that stores text data or a replacement value that evaluates to a string.</p>
</td>
<td width="117"><p class="tablebodytext">Yes</p>
</td>
</tr>
<tr align="left" valign="top">
<td width="117"><p class="tablebodytext">length</p>
</td>
<td width="117"><p class="tablebodytext">Positive integer specifying the number of characters of the source string to include in the return string.</p>
</td>
<td width="117"><p class="tablebodytext">Yes</p>
</td>
</tr>

</table>
</td>
<td width="360"><p class="tablebodytext">&nbsp;</p>
</td>
</tr>
<tr align="left" valign="top">
<td width="216"><p class="tablebodytext">SOUNDEX</p>
</td>
<td width="360"><p class="tablebodytext">Returns a character string containing the phonetic representation of the source string. This function allows comparison of words that are spelled differently, but sound alike in English.</p>
</td>
<td width="360"><p class="tablebodytext">All:  SOUNDEX</p>
</td>
<td width="117"><table width="352" cellpadding="2" cellspacing="0" border="0" style="border-collapse:collapse">
<tr align="left" valign="top">
<td width="117"><p class="tableheading"><strong class="specialbold">Name</strong></p>
</td>
<td width="117"><p class="tableheading"><strong class="specialbold">Description</strong></p>
</td>
<td width="117"><p class="tableheading"><strong class="specialbold">Required?</strong></p>
</td>
</tr>
<tr align="left" valign="top">
<td width="117"><p class="tablebodytext">source</p>
</td>
<td width="117"><p class="tablebodytext">Either the name of a backend column that stores text data or a replacement value that evaluates to a string.</p>
</td>
<td width="117"><p class="tablebodytext">Yes</p>
</td>
</tr>

</table>
</td>
<td width="360"><p class="tablebodytext">&nbsp;</p>
</td>
</tr>
<tr align="left" valign="top">
<td width="216"><p class="tablebodytext">SUBSTRING</p>
</td>
<td width="360"><p class="tablebodytext">Returns a substring of the source string containing the specified number of characters beginning with the character specified by start.</p>
</td>
<td width="360"><p class="tablebodytext">All:  SUBSTRING</p>
</td>
<td width="117"><table width="352" cellpadding="2" cellspacing="0" border="0" style="border-collapse:collapse">
<tr align="left" valign="top">
<td width="117"><p class="tableheading"><strong class="specialbold">Name</strong></p>
</td>
<td width="117"><p class="tableheading"><strong class="specialbold">Description</strong></p>
</td>
<td width="117"><p class="tableheading"><strong class="specialbold">Required?</strong></p>
</td>
</tr>
<tr align="left" valign="top">
<td width="117"><p class="tablebodytext">source</p>
</td>
<td width="117"><p class="tablebodytext">Either the name of a backend column that stores text data or a replacement value that evaluates to a string.</p>
</td>
<td width="117"><p class="tablebodytext">Yes</p>
</td>
</tr>
<tr align="left" valign="top">
<td width="117"><p class="tablebodytext">start</p>
</td>
<td width="117"><p class="tablebodytext">Positive integer specifying the first character from the left where the substring begins.</p>
</td>
<td width="117"><p class="tablebodytext">Yes</p>
</td>
</tr>
<tr align="left" valign="top">
<td width="117"><p class="tablebodytext">length</p>
</td>
<td width="117"><p class="tablebodytext">Positive integer specifying the number of characters of the source string to include in the return string.</p>
</td>
<td width="117"><p class="tablebodytext">Yes</p>
</td>
</tr>

</table>
</td>
<td width="360"><p class="tablebodytext">&nbsp;</p>
</td>
</tr>
<tr align="left" valign="top">
<td width="216"><p class="tablebodytext">TRIM</p>
</td>
<td width="360"><p class="tablebodytext">Returns a character expression after removing all leading and trailing blanks.</p>
</td>
<td width="360"><p class="tablebodytext">All:  TRIM</p>
</td>
<td width="117"><table width="352" cellpadding="2" cellspacing="0" border="0" style="border-collapse:collapse">
<tr align="left" valign="top">
<td width="117"><p class="tableheading"><strong class="specialbold">Name</strong></p>
</td>
<td width="117"><p class="tableheading"><strong class="specialbold">Description</strong></p>
</td>
<td width="117"><p class="tableheading"><strong class="specialbold">Required?</strong></p>
</td>
</tr>
<tr align="left" valign="top">
<td width="117"><p class="tablebodytext">source</p>
</td>
<td width="117"><p class="tablebodytext">Either the name of a backend column that stores text data or a replacement value that evaluates to a string.</p>
</td>
<td width="117"><p class="tablebodytext">Yes</p>
</td>
</tr>

</table>
</td>
<td width="360"><p class="tablebodytext">&nbsp;</p>
</td>
</tr>
<tr align="left" valign="top">
<td width="216"><p class="tablebodytext">UPPER</p>
</td>
<td width="360"><p class="tablebodytext">Returns a string containing all the characters of the source string converted to uppercase.</p>
</td>
<td width="360"><p class="tablebodytext">All:  UPPER</p>
</td>
<td width="117"><table width="352" cellpadding="2" cellspacing="0" border="0" style="border-collapse:collapse">
<tr align="left" valign="top">
<td width="117"><p class="tableheading">Name</p>
</td>
<td width="117"><p class="tableheading">Description</p>
</td>
<td width="117"><p class="tableheading">Required?</p>
</td>
</tr>
<tr align="left" valign="top">
<td width="117"><p class="tablebodytext">source</p>
</td>
<td width="117"><p class="tablebodytext">Either the name of a backend column that stores text data or a replacement value that evaluates to a string.</p>
</td>
<td width="117"><p class="tablebodytext">Yes</p>
</td>
</tr>

</table>
</td>
<td width="360"><p class="tablebodytext">&nbsp;</p>
</td>
</tr>
<tr align="left" valign="top">
<td width="216"><p class="tablebodytext">YEAR</p>
</td>
<td width="360"><p class="tablebodytext">Returns an integer that represents the year part of a specified date.</p>
</td>
<td width="360"><p class="tablebodytext">All:  Year</p>
</td>
<td width="117"><table width="352" cellpadding="2" cellspacing="0" border="0" style="border-collapse:collapse">
<tr align="left" valign="top">
<td width="117"><p class="tableheading">Name</p>
</td>
<td width="117"><p class="tableheading">Description</p>
</td>
<td width="117"><p class="tableheading">Required?</p>
</td>
</tr>
<tr align="left" valign="top">
<td width="117"><p class="tablebodytext">source</p>
</td>
<td width="117"><p class="tablebodytext">Replacement value that contains a string representation of a date or timestamp.</p>
</td>
<td width="117"><p class="tablebodytext">Yes</p>
</td>
</tr>

</table>
</td>
<td width="360"><p class="tablebodytext">&nbsp;</p>
</td>
</tr>
<tr align="left" valign="top">
<td width="216"><p class="tablebodytext">IN-NUMBER</p>
</td>
<td width="360"><p class="tablebodytext">Returns the string corresponding to the IN clause. On Oracle, use this function only if the inlist is guaranteed to contain less than 1000 numbers (Use IN-NUMBER-ARRAY function if the inlist can contain more than 1000 numbers). There is no size limitation for other databases.</p>
</td>
<td width="360"><p class="tablebodytext">All:  IN-Number</p>
</td>
<td width="117"><table width="352" cellpadding="2" cellspacing="0" border="0" style="border-collapse:collapse">
<tr align="left" valign="top">
<td width="117"><p class="tableheading"><strong class="specialbold">Name</strong></p>
</td>
<td width="117"><p class="tableheading"><strong class="specialbold">Description</strong></p>
</td>
<td width="117"><p class="tableheading"><strong class="specialbold">Required?</strong></p>
</td>
</tr>
<tr align="left" valign="top">
<td width="117"><p class="tablebodytext">inclause</p>
</td>
<td width="117"><p class="tablebodytext">A single number or a collection (java.util.Collection) of numbers which make up the in clause.</p>
</td>
<td width="117"><p class="tablebodytext">Yes</p>
</td>
</tr>
<tr align="left" valign="top">
<td width="117"><p class="tablebodytext">defaultValue</p>
</td>
<td width="117"><p class="tablebodytext">If the value of the &quot;inclause&quot; parameter may be null or empty, specify this parameter to ensure that a valid SQL statement will still be created.  If the function returns an empty or null value, the value of this parameter will be returned instead.</p>
</td>
<td width="117"><p class="tablebodytext">No</p>
</td>
</tr>

</table>
</td>
<td width="360"><p class="tablebodytext">&nbsp;</p>
</td>
</tr>
<tr align="left" valign="top">
<td width="216"><p class="tablebodytext">IN-TEXT</p>
</td>
<td width="360"><p class="tablebodytext">Returns the string corresponding to the IN clause. Use this function if the inlist contains strings.</p>
</td>
<td width="360"><p class="tablebodytext">All:  IN-TEXT</p>
</td>
<td width="117"><table width="352" cellpadding="2" cellspacing="0" border="0" style="border-collapse:collapse">
<tr align="left" valign="top">
<td width="117"><p class="tableheading"><strong class="specialbold">Name</strong></p>
</td>
<td width="117"><p class="tableheading"><strong class="specialbold">Description</strong></p>
</td>
<td width="117"><p class="tableheading"><strong class="specialbold">Required?</strong></p>
</td>
</tr>
<tr align="left" valign="top">
<td width="117"><p class="tablebodytext">inclause</p>
</td>
<td width="117"><p class="tablebodytext">A single string or a collection (java.util.Collection) of strings which make up the in clause.</p>
</td>
<td width="117"><p class="tablebodytext">Yes</p>
</td>
</tr>
<tr align="left" valign="top">
<td width="117"><p class="tablebodytext">defaultValue</p>
</td>
<td width="117"><p class="tablebodytext">If the value of the &quot;inclause&quot; parameter may be null or empty, specify this parameter to ensure that a valid SQL statement will still be created.  If the function returns an empty or null value, the value of this parameter will be returned instead.</p>
</td>
<td width="117"><p class="tablebodytext">No</p>
</td>
</tr>

</table>
</td>
<td width="360"><p class="tablebodytext">&nbsp;</p>
</td>
</tr>
<tr align="left" valign="top">
<td width="216"><p class="tablebodytext">IN-NUMBER-ARRAY</p>
</td>
<td width="360"><p class="tablebodytext">Returns the string corresponding to the IN clause. On Oracle, use this function if the inlist can contain more than 1000 numbers. This function is same as IN-NUMBER for other databases.</p>
</td>
<td width="360"><p class="tablebodytext">Oracle:  IN-NUMBER-ARRAY</p>
<p class="tablebodytext">All others: IN-NUMBER</p>
</td>
<td width="117"><table width="352" cellpadding="2" cellspacing="0" border="0" style="border-collapse:collapse">
<tr align="left" valign="top">
<td width="117"><p class="tableheading"><strong class="specialbold">Name</strong></p>
</td>
<td width="117"><p class="tableheading"><strong class="specialbold">Description</strong></p>
</td>
<td width="117"><p class="tableheading"><strong class="specialbold">Required?</strong></p>
</td>
</tr>
<tr align="left" valign="top">
<td width="117"><p class="tablebodytext">inclause</p>
</td>
<td width="117"><p class="tablebodytext">A collection (java.util.Collection) of numbers which make up the in clause.</p>
</td>
<td width="117"><p class="tablebodytext">Yes</p>
</td>
</tr>
<tr align="left" valign="top">
<td width="117"><p class="tablebodytext">defaultValue</p>
</td>
<td width="117"><p class="tablebodytext">If the value of the &quot;inclause&quot; parameter may be null or empty, specify this parameter to ensure that a valid SQL statement will still be created.  If the function returns an empty or null value, the value of this parameter will be returned instead.</p>
</td>
<td width="117"><p class="tablebodytext">No</p>
</td>
</tr>

</table>
</td>
<td width="360"><p class="tablebodytext">&nbsp;</p>
</td>
</tr>

</table>
<p class="bodytext">In addition, the following special functions are available to provide special treatment of specific operands:</p>
<ul class="listbullet"><li class="listbullet">IN-NUMBER (returns the numbers corresponding to the IN clause)</li><li class="listbullet">IN-TEXT (returns the text string corresponding to the IN clause)</li></ul><table cellpadding="0" cellspacing="0" border="0">
<tr valign="top">
<td width= "227">
<p class="relatedheading">See Also</p><p class="relateditem"><a href="13297.htm" target="_self">Selector</a></p></td>
</tr>
</table>


  </td></tr>
  <tr valign="bottom"><td>
    <!-- Insert Your Footer Here -->
  </td></tr>
</table>
</body>
</html>

